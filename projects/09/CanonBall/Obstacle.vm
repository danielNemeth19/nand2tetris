function Obstacle.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 8
pop this 2
push constant 11
pop this 3
push argument 2
pop this 4
push argument 1
push constant 8
call Math.multiply 2
pop this 0
push argument 0
push constant 11
call Math.multiply 2
pop this 1
push pointer 0
call Obstacle.draw 1
pop temp 0
push pointer 0
return
function Obstacle.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Obstacle.draw_or_erase 0
push argument 0
pop pointer 0
push this 1
push constant 11
call Math.divide 2
push this 0
push constant 8
call Math.divide 2
call Output.moveCursor 2
pop temp 0
push argument 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 4
push constant 48
add
call Output.printChar 1
pop temp 0
goto IF_END0
label IF_FALSE0
push constant 32
call Output.printChar 1
pop temp 0
label IF_END0
push argument 1
call Screen.setColor 1
pop temp 0
push this 0
push constant 1
gt
push this 1
push constant 1
gt
and
push this 0
push this 2
add
push constant 512
lt
and
push this 1
push this 3
add
push constant 256
lt
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push constant 2
sub
push this 1
push constant 2
sub
push this 0
push this 2
add
push this 1
push constant 2
sub
call Screen.drawLine 4
pop temp 0
push this 0
push constant 2
sub
push this 1
push constant 2
sub
push this 0
push constant 2
sub
push this 1
push this 3
add
call Screen.drawLine 4
pop temp 0
push this 0
push this 2
add
push this 1
push constant 2
sub
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawLine 4
pop temp 0
push this 0
push constant 2
sub
push this 1
push this 3
add
push this 0
push this 2
add
push this 1
push this 3
add
call Screen.drawLine 4
pop temp 0
label IF_FALSE1
push constant 0
return
function Obstacle.draw 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
not
call Obstacle.draw_or_erase 2
pop temp 0
push constant 0
return
function Obstacle.erase 0
push argument 0
pop pointer 0
push pointer 0
push constant 0
call Obstacle.draw_or_erase 2
pop temp 0
push constant 0
return
function Obstacle.x1 0
push argument 0
pop pointer 0
push this 0
push constant 2
sub
return
function Obstacle.y1 0
push argument 0
pop pointer 0
push this 1
push constant 2
sub
return
function Obstacle.x2 0
push argument 0
pop pointer 0
push this 0
push this 2
add
return
function Obstacle.y2 0
push argument 0
pop pointer 0
push this 1
push this 3
add
return
function Obstacle.value 0
push argument 0
pop pointer 0
push this 4
return
