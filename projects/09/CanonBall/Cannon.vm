function Cannon.new 0
push constant 2
call Memory.alloc 1
pop pointer 0
push pointer 0
call Cannon.drawBase 1
pop temp 0
push constant 45
pop this 0
push constant 2
pop this 1
push constant 0
push constant 15
call Output.moveCursor 2
pop temp 0
push constant 11
call String.new 1
push constant 69
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push pointer 0
call Cannon.printAngle 1
pop temp 0
push constant 0
push constant 30
call Output.moveCursor 2
pop temp 0
push constant 15
call String.new 1
push constant 73
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 115
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push pointer 0
call Cannon.printRange 1
pop temp 0
push pointer 0
call Cannon.draw 1
pop temp 0
push pointer 0
return
function Cannon.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Cannon.printAngle 0
push argument 0
pop pointer 0
push constant 0
push constant 26
call Output.moveCursor 2
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push constant 32
call Output.printChar 1
pop temp 0
push constant 0
push constant 26
call Output.moveCursor 2
pop temp 0
push this 0
call Output.printInt 1
pop temp 0
push constant 0
return
function Cannon.printRange 0
push argument 0
pop pointer 0
push constant 0
push constant 45
call Output.moveCursor 2
pop temp 0
push this 1
call Output.printInt 1
pop temp 0
push constant 0
return
function Cannon.move 1
push argument 0
pop pointer 0
push this 0
pop local 0
push argument 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
goto IF_END0
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
sub
pop local 0
label IF_FALSE1
label IF_END0
push local 0
push constant 0
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
pop local 0
goto IF_END2
label IF_FALSE2
push local 0
push constant 90
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 90
pop local 0
label IF_FALSE3
label IF_END2
push local 0
push this 0
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Cannon.draw 1
pop temp 0
push local 0
pop this 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Cannon.draw 1
pop temp 0
push pointer 0
call Cannon.printAngle 1
pop temp 0
label IF_FALSE4
push constant 0
return
function Cannon.changeRange 1
push argument 0
pop pointer 0
push this 1
pop local 0
push argument 1
push constant 0
gt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 0
push constant 1
add
pop local 0
goto IF_END0
label IF_FALSE0
push argument 1
push constant 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 0
push constant 1
sub
pop local 0
label IF_FALSE1
label IF_END0
push local 0
push constant 1
lt
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
pop local 0
goto IF_END2
label IF_FALSE2
push local 0
push constant 3
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 3
pop local 0
label IF_FALSE3
label IF_END2
push local 0
push this 1
eq
not
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
call Screen.setColor 1
pop temp 0
push pointer 0
call Cannon.draw 1
pop temp 0
push local 0
pop this 1
push constant 0
not
call Screen.setColor 1
pop temp 0
push pointer 0
call Cannon.draw 1
pop temp 0
label IF_FALSE4
push pointer 0
call Cannon.printRange 1
pop temp 0
push constant 0
return
function Cannon.range 0
push argument 0
pop pointer 0
push this 1
return
function Cannon.drawBase 2
push argument 0
pop pointer 0
push constant 256
push constant 16
sub
push constant 32
call Math.multiply 2
pop local 0
push constant 16384
push local 0
add
pop local 1
push local 1
push constant 0
add
push constant 7
call Memory.poke 2
pop temp 0
push local 1
push constant 32
add
push constant 63
call Memory.poke 2
pop temp 0
push local 1
push constant 64
add
push constant 255
call Memory.poke 2
pop temp 0
push local 1
push constant 96
add
push constant 1023
call Memory.poke 2
pop temp 0
push local 1
push constant 128
add
push constant 2047
call Memory.poke 2
pop temp 0
push local 1
push constant 160
add
push constant 4095
call Memory.poke 2
pop temp 0
push local 1
push constant 192
add
push constant 4095
call Memory.poke 2
pop temp 0
push local 1
push constant 224
add
push constant 8191
call Memory.poke 2
pop temp 0
push local 1
push constant 256
add
push constant 16383
call Memory.poke 2
pop temp 0
push local 1
push constant 288
add
push constant 16383
call Memory.poke 2
pop temp 0
push local 1
push constant 320
add
push constant 32767
call Memory.poke 2
pop temp 0
push local 1
push constant 352
add
push constant 32767
call Memory.poke 2
pop temp 0
push local 1
push constant 384
add
push constant 32767
call Memory.poke 2
pop temp 0
push local 1
push constant 416
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 448
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push local 1
push constant 480
add
push constant 1
neg
call Memory.poke 2
pop temp 0
push constant 0
return
function Cannon.draw 4
push argument 0
pop pointer 0
push constant 16
push this 0
call Trig.cos 1
call Math.multiply 2
push constant 100
call Math.divide 2
pop local 0
push constant 16
push this 0
call Trig.sin 1
call Math.multiply 2
push constant 100
call Math.divide 2
pop local 1
push local 0
push constant 255
push local 1
sub
push pointer 0
call Cannon.x 1
push pointer 0
call Cannon.y 1
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Cannon.x 0
push argument 0
pop pointer 0
push constant 40
push this 0
call Trig.cos 1
call Math.multiply 2
push constant 100
call Math.divide 2
return
function Cannon.y 0
push argument 0
pop pointer 0
push constant 255
push constant 40
push this 0
call Trig.sin 1
call Math.multiply 2
push constant 100
call Math.divide 2
sub
return
function Cannon.angle 0
push argument 0
pop pointer 0
push this 0
return
