function Snake.new 0
push constant 5
call Memory.alloc 1
pop pointer 0
push constant 2
call Array.new 1
pop this 0
push constant 2
call Array.new 1
pop this 1
push constant 0
push this 0
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 1
add
push argument 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 512
call Array.new 1
pop this 2
push constant 512
call Array.new 1
pop this 3
push constant 0
pop this 4
push pointer 0
call Snake.drawSnakeHead 1
pop temp 0
push pointer 0
return
function Snake.drawSnakeHead 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 1
push this 0
add
pop pointer 1
push that 0
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 8
add
push constant 1
push this 0
add
pop pointer 1
push that 0
push constant 8
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Snake.eraseSnakeTail 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push constant 0
push this 1
add
pop pointer 1
push that 0
push constant 1
push this 1
add
pop pointer 1
push that 0
push constant 0
push this 1
add
pop pointer 1
push that 0
push constant 8
add
push constant 1
push this 1
add
pop pointer 1
push that 0
push constant 8
add
call Screen.drawRectangle 4
pop temp 0
push constant 0
return
function Snake.incLoc 0
push argument 0
pop pointer 0
push argument 1
push constant 0
gt
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 8
add
push constant 504
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE0
push argument 2
push constant 0
gt
push constant 1
push this 0
add
pop pointer 1
push that 0
push constant 8
add
push constant 248
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
push this 0
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE1
push argument 1
push constant 0
lt
push constant 0
push this 0
add
pop pointer 1
push that 0
push constant 8
sub
push constant 0
lt
and
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
push this 0
add
push constant 496
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE2
push argument 2
push constant 0
lt
push constant 1
push this 0
add
pop pointer 1
push that 0
push constant 8
sub
push constant 0
lt
and
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 1
push this 0
add
push constant 240
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE3
push constant 0
push this 0
add
push argument 1
push constant 8
call Math.multiply 2
push constant 0
push this 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 0
add
push argument 2
push constant 8
call Math.multiply 2
push constant 1
push this 0
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push this 2
add
pop pointer 1
push that 0
push constant 0
gt
push constant 0
push this 1
add
pop pointer 1
push that 0
push constant 8
add
push constant 504
eq
and
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 0
push this 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE4
push constant 0
push this 3
add
pop pointer 1
push that 0
push constant 0
gt
push constant 1
push this 1
add
pop pointer 1
push that 0
push constant 8
add
and
push constant 248
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 1
push this 1
add
push constant 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE5
push constant 0
push this 2
add
pop pointer 1
push that 0
push constant 0
lt
push constant 0
push this 1
add
pop pointer 1
push that 0
push constant 8
sub
and
push constant 0
lt
if-goto IF_TRUE6
goto IF_FALSE6
label IF_TRUE6
push constant 0
push this 1
add
push constant 496
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE6
push constant 0
push this 3
add
pop pointer 1
push that 0
push constant 0
lt
push constant 1
push this 1
add
pop pointer 1
push that 0
push constant 8
sub
and
push constant 0
lt
if-goto IF_TRUE7
goto IF_FALSE7
label IF_TRUE7
push constant 1
push this 1
add
push constant 240
pop temp 0
pop pointer 1
push temp 0
pop that 0
label IF_FALSE7
push constant 0
push this 1
add
push constant 0
push this 2
add
pop pointer 1
push that 0
push constant 8
call Math.multiply 2
push constant 0
push this 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push this 1
add
push constant 0
push this 3
add
pop pointer 1
push that 0
push constant 8
call Math.multiply 2
push constant 1
push this 1
add
pop pointer 1
push that 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push pointer 0
call Snake.eraseSnakeTail 1
pop temp 0
push pointer 0
call Snake.drawSnakeHead 1
pop temp 0
push pointer 0
push argument 1
push argument 2
call Snake.updateHistory 3
pop temp 0
push constant 0
return
function Snake.incSize 0
push argument 0
pop pointer 0
push this 4
push constant 1
add
pop this 4
push constant 0
return
function Snake.updateHistory 1
push argument 0
pop pointer 0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 4
lt
not
if-goto WHILE_END0
push local 0
push this 2
add
push local 0
push constant 1
add
push this 2
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 3
add
push local 0
push constant 1
add
push this 3
add
pop pointer 1
push that 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push this 4
push this 2
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 4
push this 3
add
push argument 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Snake.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Snake.getLocHead 0
push argument 0
pop pointer 0
push this 0
return
