function Snake.new 1
push constant 10
call Memory.alloc 1
pop pointer 0
push argument 0
pop this 2
push argument 1
pop this 3
push constant 16
pop this 4
push constant 100
pop this 5
push constant 2
pop this 6
push constant 32
pop this 7
push constant 16
pop this 8
push this 5
call Array.new 1
pop this 0
push this 5
call Array.new 1
pop this 1
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push local 0
push this 0
add
push argument 0
push constant 1
add
push local 0
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push this 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push pointer 0
return
function Snake.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push this 0
call Array.dispose 1
pop temp 0
push this 1
call Array.dispose 1
pop temp 0
push constant 0
return
function Snake.step 5
push argument 0
pop pointer 0
push pointer 0
call Snake.clean 1
pop temp 0
push this 2
pop local 0
push this 3
pop local 1
push constant 0
pop local 4
label WHILE_EXP0
push local 4
push this 6
lt
not
if-goto WHILE_END0
push local 4
push this 0
add
pop pointer 1
push that 0
pop local 2
push local 4
push this 1
add
pop pointer 1
push that 0
pop local 3
push local 4
push this 0
add
push local 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 4
push this 1
add
push local 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push local 2
pop local 0
push local 3
pop local 1
push local 4
push constant 1
add
pop local 4
goto WHILE_EXP0
label WHILE_END0
push argument 1
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
sub
pop this 3
label IF_FALSE0
push argument 1
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 3
push constant 1
add
pop this 3
label IF_FALSE1
push argument 1
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push this 2
push constant 1
sub
pop this 2
label IF_FALSE2
push argument 1
push constant 4
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push this 2
push constant 1
add
pop this 2
label IF_FALSE3
push pointer 0
push constant 1
neg
call Snake.draw 2
pop temp 0
push constant 0
return
function Snake.isWrongStep 1
push argument 0
pop pointer 0
push this 2
push constant 0
lt
push this 2
push constant 31
gt
or
push this 3
push constant 0
lt
or
push this 3
push constant 14
gt
or
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
not
return
label IF_FALSE0
push constant 0
pop local 0
label WHILE_EXP0
push local 0
push this 6
lt
not
if-goto WHILE_END0
push this 2
push local 0
push this 0
add
pop pointer 1
push that 0
eq
push this 3
push local 0
push this 1
add
pop pointer 1
push that 0
eq
and
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.tryToEat 0
push argument 0
pop pointer 0
push this 2
push argument 1
call Apple.getX 1
eq
push this 3
push argument 1
call Apple.getY 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 6
push this 0
add
push this 6
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push this 1
add
push this 6
push constant 1
sub
push this 1
add
pop pointer 1
push that 0
push constant 1
add
pop temp 0
pop pointer 1
push temp 0
pop that 0
push this 6
push constant 1
add
pop this 6
push constant 0
not
return
label IF_FALSE0
push constant 0
return
function Snake.clean 0
push argument 0
pop pointer 0
push pointer 0
push this 6
push constant 1
sub
push this 1
add
pop pointer 1
push that 0
push this 4
call Math.multiply 2
push this 7
call Math.multiply 2
push this 6
push constant 1
sub
push this 0
add
pop pointer 1
push that 0
push this 4
call Math.multiply 2
push this 8
call Math.divide 2
add
push constant 0
call Snake.drawCell 3
pop temp 0
push constant 0
return
function Snake.draw 2
push argument 0
pop pointer 0
push this 3
push this 4
call Math.multiply 2
push this 7
call Math.multiply 2
push this 2
push this 4
call Math.multiply 2
push this 8
call Math.divide 2
add
pop local 0
push pointer 0
push local 0
push argument 1
call Snake.drawCell 3
pop temp 0
push constant 0
pop local 1
label WHILE_EXP0
push local 1
push this 6
lt
not
if-goto WHILE_END0
push local 1
push this 1
add
pop pointer 1
push that 0
push this 4
call Math.multiply 2
push this 7
call Math.multiply 2
push local 1
push this 0
add
pop pointer 1
push that 0
push this 4
call Math.multiply 2
push this 8
call Math.divide 2
add
pop local 0
push pointer 0
push local 0
push argument 1
call Snake.drawCell 3
pop temp 0
push local 1
push constant 1
add
pop local 1
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.drawCell 0
push argument 0
pop pointer 0
push constant 16384
push argument 1
add
pop this 9
push this 9
push constant 0
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 32
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 64
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 96
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 128
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 160
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 192
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 224
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 256
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 288
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 320
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 352
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 384
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 416
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 448
add
push argument 2
call Memory.poke 2
pop temp 0
push this 9
push constant 480
add
push argument 2
call Memory.poke 2
pop temp 0
push constant 0
return
