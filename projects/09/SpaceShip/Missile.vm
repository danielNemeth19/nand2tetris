function Missile.new 0
push constant 3
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 2
push pointer 0
return
function Missile.getMissileStatus 0
push argument 0
pop pointer 0
push this 2
return
function Missile.launchMissile 0
push argument 0
pop pointer 0
push argument 1
pop this 0
push argument 2
pop this 1
push constant 0
not
pop this 2
push constant 0
return
function Missile.dispose 0
push argument 0
pop pointer 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Missile.moveMissile 0
push argument 0
pop pointer 0
push this 1
push constant 2
sub
push constant 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop this 2
push pointer 0
call Missile.eraseMissile 1
pop temp 0
goto IF_END0
label IF_FALSE0
push pointer 0
call Missile.eraseMissile 1
pop temp 0
push this 1
push constant 2
sub
pop this 1
push pointer 0
call Missile.drawMissile 1
pop temp 0
label IF_END0
push constant 0
return
function Missile.drawMissile 0
push argument 0
pop pointer 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 1
push constant 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
function Missile.eraseMissile 0
push argument 0
pop pointer 0
push constant 0
call Screen.setColor 1
pop temp 0
push this 0
push this 1
push this 0
push this 1
push constant 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
return
