function Course.new 1
push constant 7
call Memory.alloc 1
pop pointer 0
push constant 0
pop this 3
push constant 1
neg
pop this 2
push constant 255
pop this 0
push constant 127
pop this 1
push constant 0
pop this 6
push constant 42
pop static 0
push constant 511
push constant 42
sub
pop static 1
push constant 42
pop static 2
push constant 255
push constant 42
sub
pop static 3
push argument 0
push constant 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Course.course_1_len 0
pop this 2
push this 2
call Array.new 1
pop this 4
push this 2
call Array.new 1
pop this 5
push this 0
push this 1
push this 4
push this 5
push this 3
call Course.course_1 5
pop temp 0
push this 2
push constant 1
sub
push this 4
add
pop pointer 1
push that 0
pop this 0
push this 2
push constant 1
sub
push this 5
add
pop pointer 1
push that 0
pop this 1
label IF_FALSE0
push argument 0
push constant 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
call Course.course_2_len 0
pop this 2
push this 2
call Array.new 1
pop this 4
push this 2
call Array.new 1
pop this 5
push this 0
push this 1
push this 4
push this 5
push this 3
call Course.course_2 5
pop temp 0
push this 2
push constant 1
sub
push this 4
add
pop pointer 1
push that 0
pop this 0
push this 2
push constant 1
sub
push this 5
add
pop pointer 1
push that 0
pop this 1
label IF_FALSE1
push argument 0
push constant 3
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
call Course.course_3_len 0
pop this 2
push this 2
call Array.new 1
pop this 4
push this 2
call Array.new 1
pop this 5
push this 0
push this 1
push this 4
push this 5
push this 3
call Course.course_3 5
pop temp 0
push this 2
push constant 1
sub
push this 4
add
pop pointer 1
push that 0
pop this 0
push this 2
push constant 1
sub
push this 5
add
pop pointer 1
push that 0
pop this 1
label IF_FALSE2
push pointer 0
return
function Course.dispose 0
push argument 0
pop pointer 0
push this 4
call Array.dispose 1
pop temp 0
push this 5
call Array.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Course.getx 0
push argument 0
pop pointer 0
push this 0
return
function Course.gety 0
push argument 0
pop pointer 0
push this 1
return
function Course.getLapCount 0
push argument 0
pop pointer 0
push this 6
return
function Course.nextLocation 2
push argument 0
pop pointer 0
push this 3
push this 4
add
pop pointer 1
push that 0
pop local 0
push this 3
push this 5
add
pop pointer 1
push that 0
pop local 1
push this 0
push local 0
eq
push this 1
push local 1
eq
and
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 3
push constant 1
add
pop this 3
push this 3
push this 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
pop this 3
push this 6
push constant 1
add
pop this 6
label IF_FALSE1
push this 3
push this 4
add
pop pointer 1
push that 0
pop local 0
push this 3
push this 5
add
pop pointer 1
push that 0
pop local 1
label IF_FALSE0
push this 0
push local 0
call Course.towards 2
pop this 0
push this 1
push local 1
call Course.towards 2
pop this 1
push constant 0
return
function Course.course_1_len 0
push constant 2
return
function Course.course_1 0
push constant 0
push argument 2
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push argument 3
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push static 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 3
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Course.course_2_len 0
push constant 4
return
function Course.course_2 0
push constant 0
push argument 2
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push argument 3
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 3
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push static 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 3
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push static 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 3
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Course.course_3_len 0
push constant 8
return
function Course.course_3 0
push constant 0
push argument 2
add
push constant 255
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
push argument 3
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 2
add
push constant 255
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 1
push argument 3
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 2
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 2
push argument 3
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 2
add
push static 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 3
push argument 3
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push argument 2
add
push constant 255
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 4
push argument 3
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push argument 2
add
push constant 255
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 5
push argument 3
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push argument 2
add
push static 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 6
push argument 3
add
push static 2
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push argument 2
add
push static 0
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 7
push argument 3
add
push static 3
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Course.towards 1
push argument 0
pop local 0
push argument 0
push argument 1
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push constant 1
add
pop local 0
goto IF_END0
label IF_FALSE0
push argument 0
push argument 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push constant 1
sub
pop local 0
label IF_FALSE1
label IF_END0
push local 0
return
